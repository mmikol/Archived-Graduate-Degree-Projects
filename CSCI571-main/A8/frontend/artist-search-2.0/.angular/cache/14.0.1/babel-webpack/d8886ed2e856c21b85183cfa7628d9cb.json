{"ast":null,"code":"import _asyncToGenerator from \"/Users/miliano/Documents/mmikol.github.io/A8/frontend/artist-search-2.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ArtistDetails } from 'src/models/artist-details';\nimport { Artwork } from 'src/models/artwork';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/shared/artists-search-data.service\";\nimport * as i2 from \"src/shared/artist-details-data.service\";\nimport * as i3 from \"src/shared/artist-artworks-data.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction ArtistResultListComponent_div_0_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ArtistResultListComponent_div_0_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const artist_r3 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      ctx_r5.chosen = i_r4;\n      return i0.ɵɵresetView(ctx_r5.expandArtist(artist_r3.id));\n    });\n    i0.ɵɵelement(1, \"img\", 7);\n    i0.ɵɵelementStart(2, \"div\", 8)(3, \"p\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const artist_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r2.chosen == i_r4 ? \"#112B3C\" : \"#205375\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", artist_r3.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(artist_r3.name);\n  }\n}\n\nfunction ArtistResultListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, ArtistResultListComponent_div_0_button_1_Template, 5, 4, \"button\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.artists);\n  }\n}\n\nfunction ArtistResultListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \"No results.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class ArtistResultListComponent {\n  constructor(artistSearchData, artistDetailsData, artistArtworksData) {\n    this.artistSearchData = artistSearchData;\n    this.artistDetailsData = artistDetailsData;\n    this.artistArtworksData = artistArtworksData;\n    this.artistResultsLoaded = false;\n    this.artistResultsFound = false;\n    this.artistExpansionLoaded = false;\n    this.showSpinner = false;\n  }\n\n  ngOnInit() {\n    this.artistSearchData.message.subscribe(([data, resultsLoaded]) => {\n      this.clearArtistExpansion();\n      this.artistResultsLoaded = resultsLoaded;\n      this.artistResultsFound = data.length > 0;\n      this.artists = data;\n    });\n  }\n\n  toggleSpinner() {\n    this.showSpinner = !this.showSpinner;\n  }\n\n  clearArtistExpansion() {\n    if (this.artistExpansionLoaded) {\n      this.artistDetailsData.set([new ArtistDetails({}), !this.artistExpansionLoaded]);\n      this.artistArtworksData.set([[], this.artistExpansionLoaded]);\n    } else this.artistExpansionLoaded = true;\n  }\n\n  getArtistDetails(query) {\n    return _asyncToGenerator(function* () {\n      const config = [`https://artistsearchbackend.wl.r.appspot.com/artists?id=${query}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }];\n      return yield fetch(...config).then(response => {\n        return response.json();\n      }).then(parsed => new ArtistDetails(parsed));\n    })();\n  }\n\n  getArtistArtworks(query) {\n    return _asyncToGenerator(function* () {\n      const config = [`https://artistsearchbackend.wl.r.appspot.com/artworks?id=${query}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }];\n      return yield fetch(...config).then(response => {\n        return response.json();\n      }).then(parsed => parsed.map(item => {\n        return new Artwork(item);\n      }));\n    })();\n  }\n\n  expandArtist(artistID) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.clearArtistExpansion();\n\n      _this.toggleSpinner();\n\n      const [artistDetails, artistArtworks] = [yield _this.getArtistDetails(artistID), yield _this.getArtistArtworks(artistID)];\n\n      _this.toggleSpinner();\n\n      _this.artistDetailsData.set([artistDetails, _this.artistExpansionLoaded]); // render details\n\n\n      _this.artistArtworksData.set([artistArtworks, _this.artistExpansionLoaded]); // render artworks\n\n    })();\n  }\n\n}\n\nArtistResultListComponent.ɵfac = function ArtistResultListComponent_Factory(t) {\n  return new (t || ArtistResultListComponent)(i0.ɵɵdirectiveInject(i1.ArtistsSearchDataService), i0.ɵɵdirectiveInject(i2.ArtistDetailsDataService), i0.ɵɵdirectiveInject(i3.ArtistArtworksDataService));\n};\n\nArtistResultListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistResultListComponent,\n  selectors: [[\"app-artist-result-list\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[\"class\", \"card-group artist-result-list d-flex mx-auto w-75 flex-row flex-nowrap pb-3 mb-1\", 4, \"ngIf\"], [\"class\", \"alert alert-danger w-75 mx-auto\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"row\", \"mt-2\"], [\"role\", \"status\", 1, \"spinner-border\", \"mx-auto\", 3, \"hidden\"], [1, \"card-group\", \"artist-result-list\", \"d-flex\", \"mx-auto\", \"w-75\", \"flex-row\", \"flex-nowrap\", \"pb-3\", \"mb-1\"], [\"class\", \"card artist-card\", 3, \"background-color\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"artist-card\", 3, \"click\"], [\"alt\", \"Card image cap\", 1, \"card-img-top\", 3, \"src\"], [1, \"card-body\", \"pt-1\", \"pb-0\"], [1, \"card-title\", \"text-white\", \"text-left\", \"fs-6\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"w-75\", \"mx-auto\"]],\n  template: function ArtistResultListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ArtistResultListComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵtemplate(1, ArtistResultListComponent_div_1_Template, 2, 0, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelement(3, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.artistResultsLoaded && ctx.artistResultsFound);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.artistResultsLoaded && !ctx.artistResultsFound);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.showSpinner);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcnRpc3QtcmVzdWx0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["ArtistDetails","Artwork","i0","ctx_r5","ArtistResultListComponent","constructor","artistSearchData","artistDetailsData","artistArtworksData","ngOnInit","message","subscribe","data","resultsLoaded","clearArtistExpansion","artistResultsLoaded","artistResultsFound","length","artists","toggleSpinner","showSpinner","artistExpansionLoaded","set","getArtistDetails","query","config","method","headers","fetch","then","response","json","parsed","getArtistArtworks","map","item","expandArtist","artistID","artistDetails","artistArtworks","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/miliano/Documents/mmikol.github.io/A8/frontend/artist-search-2.0/src/app/artist-result-list/artist-result-list.component.ts","/Users/miliano/Documents/mmikol.github.io/A8/frontend/artist-search-2.0/src/app/artist-result-list/artist-result-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ArtistDetails } from 'src/models/artist-details';\nimport { ArtistsSearchDataService } from 'src/shared/artists-search-data.service';\nimport { ArtistDetailsDataService } from 'src/shared/artist-details-data.service';\nimport { ArtistArtworksDataService } from 'src/shared/artist-artworks-data.service';\nimport { Artwork } from 'src/models/artwork';\nimport { Artist } from 'src/models/artist';\n\n@Component({\n  selector: 'app-artist-result-list',\n  templateUrl: './artist-result-list.component.html',\n  styleUrls: ['./artist-result-list.component.css']\n})\nexport class ArtistResultListComponent implements OnInit {\n  public chosen!: any\n  public artists!: Array<Artist>\n  public artistResultsLoaded: boolean = false\n  public artistResultsFound: boolean = false\n  public artistExpansionLoaded: boolean = false\n  public showSpinner: boolean = false\n\n  constructor(\n    private artistSearchData: ArtistsSearchDataService, \n    private artistDetailsData: ArtistDetailsDataService, \n    private artistArtworksData: ArtistArtworksDataService) {}\n  \n  ngOnInit(): void {\n    this.artistSearchData.message.subscribe(([data, resultsLoaded]) => {\n      this.clearArtistExpansion() \n      this.artistResultsLoaded = resultsLoaded\n      this.artistResultsFound = data.length > 0\n      this.artists = data\n    })\n  }\n\n  private toggleSpinner() {\n    this.showSpinner = !this.showSpinner\n  }\n\n  private clearArtistExpansion() {\n    if (this.artistExpansionLoaded) {\n      this.artistDetailsData.set([new ArtistDetails({}), !this.artistExpansionLoaded])\n      this.artistArtworksData.set([[], this.artistExpansionLoaded])\n    } else this.artistExpansionLoaded = true\n  }\n\n  public async getArtistDetails(query: string) {\n    const config = [\n      `https://artistsearchbackend.wl.r.appspot.com/artists?id=${query}`,\n      { method: 'GET', headers: { 'Content-Type': 'application/json' } },  \n    ] as const\n    return await fetch(...config)\n      .then(response => { return response.json() })\n      .then(parsed => new ArtistDetails(parsed))\n  }\n\n  public async getArtistArtworks(query: string) {\n    const config = [\n      `https://artistsearchbackend.wl.r.appspot.com/artworks?id=${query}`,\n      { method: 'GET', headers: { 'Content-Type': 'application/json' } },  \n    ] as const\n    return await fetch(...config)\n      .then(response => { return response.json() })\n      .then(parsed =>parsed.map((item: Object) => { return new Artwork(item) }))\n  }\n\n  public async expandArtist(artistID: string) {\n    this.clearArtistExpansion()\n    this.toggleSpinner()\n    const [artistDetails, artistArtworks] = [await this.getArtistDetails(artistID), await this.getArtistArtworks(artistID)]\n    this.toggleSpinner()\n    this.artistDetailsData.set([artistDetails, this.artistExpansionLoaded]) // render details\n    this.artistArtworksData.set([artistArtworks, this.artistExpansionLoaded]) // render artworks\n  }\n}\n","<div class=\"card-group artist-result-list d-flex mx-auto w-75 flex-row flex-nowrap pb-3 mb-1\" *ngIf=\"artistResultsLoaded && artistResultsFound\">\n    <button class=\"card artist-card\" [style.background-color]=\"(chosen == i) ? '#112B3C' : '#205375'\" *ngFor=\"let artist of artists; let i = index;\" (click)=\"chosen = i; expandArtist(artist.id)\">\n        <img class=\"card-img-top\" src=\"{{ artist.image }}\" alt=\"Card image cap\">\n        <div class=\"card-body pt-1 pb-0\">\n            <p class=\"card-title text-white text-left fs-6\">{{ artist.name }}</p>\n        </div>\n    </button>\n</div>\n<div class=\"alert alert-danger w-75 mx-auto\" role=\"alert\" *ngIf=\"artistResultsLoaded && !artistResultsFound\">No results.</div>\n<div class=\"row mt-2\">\n    <div class=\"spinner-border mx-auto\" role=\"status\" [hidden]=\"!showSpinner\"></div>      \n</div>\n"]},"metadata":{},"sourceType":"module"}