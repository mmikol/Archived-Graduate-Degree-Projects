{"ast":null,"code":"import _asyncToGenerator from \"/Users/miliano/Documents/mmikol.github.io/A8/frontend/artist-search-2.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Artist } from 'src/models/artist';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/shared/artists-search-data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction ArtistSearchFormComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 11);\n  }\n}\n\nexport class ArtistSearchFormComponent {\n  constructor(artistSearchData) {\n    this.artistSearchData = artistSearchData;\n    this.showSpinner = false;\n    this.artistResultsLoaded = false;\n    this.artistResultsFound = false;\n  }\n\n  ngOnInit() {\n    console.log(this.artistResultsLoaded);\n  }\n\n  toggleSpinner() {\n    this.showSpinner = !this.showSpinner;\n  }\n\n  getArtists(query) {\n    return _asyncToGenerator(function* () {\n      const config = [`https://artistsearchbackend.wl.r.appspot.com/search?q=${query}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }];\n      const artists = yield fetch(...config).then(response => {\n        return response.json();\n      }).then(parsed => parsed.map(item => {\n        return new Artist(item);\n      }));\n      return artists;\n    })();\n  }\n\n  search() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.toggleSpinner();\n\n      _this.artists = yield _this.getArtists(_this.searchBar);\n      _this.artistResultsFound = _this.artists.length > 0;\n      if (!_this.artistResultsLoaded) _this.artistResultsLoaded = !_this.artistResultsLoaded;\n\n      _this.artistSearchData.set([_this.artists, _this.artistResultsLoaded]);\n\n      _this.toggleSpinner();\n    })();\n  }\n\n  clear() {\n    if (this.artistResultsLoaded) {\n      this.artistResultsLoaded = !this.artistResultsLoaded;\n      this.artistSearchData.set([[], this.artistResultsLoaded]);\n    }\n  }\n\n}\n\nArtistSearchFormComponent.ɵfac = function ArtistSearchFormComponent_Factory(t) {\n  return new (t || ArtistSearchFormComponent)(i0.ɵɵdirectiveInject(i1.ArtistsSearchDataService));\n};\n\nArtistSearchFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistSearchFormComponent,\n  selectors: [[\"app-artist-search-form\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[\"action\", \"/api/search\", 1, \"form-group\", \"mt-5\", \"mb-3\", 3, \"ngSubmit\"], [\"artistSearchForm\", \"ngForm\"], [1, \"row\", \"justify-content-center\"], [\"placeholder\", \"Please enter an artist name.\", \"name\", \"searchBar\", \"required\", \"\", 1, \"form-control\", \"input-sm\", \"w-75\", 3, \"ngModel\", \"ngModelChange\"], [1, \"row\", \"mt-3\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"btn-toolbar\"], [1, \"btn-group\", \"me-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-sm\", \"active\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm\", \"role\", \"status\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-hidden\", \"true\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", \"active\", 3, \"click\"], [\"role\", \"status\", 1, \"spinner-border\", \"spinner-border-sm\"]],\n  template: function ArtistSearchFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function ArtistSearchFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ArtistSearchFormComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.searchBar = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"button\", 8);\n      i0.ɵɵtext(9, \" Search \");\n      i0.ɵɵtemplate(10, ArtistSearchFormComponent_span_10_Template, 1, 0, \"span\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function ArtistSearchFormComponent_Template_button_click_12_listener() {\n        return ctx.clear();\n      });\n      i0.ɵɵtext(13, \"Clear\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchBar);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", _r0.form.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcnRpc3Qtc2VhcmNoLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"]\n});\nArtistSearchFormComponent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ArtistSearchFormComponent,\n  factory: ArtistSearchFormComponent.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,MAAT,QAAuB,mBAAvB;;;;;;;;ICSwBC;;;;ADExB,OAAM,MAAOC,yBAAP,CAAgC;EAOpCC,YAAoBC,gBAApB,EAA8D;IAA1C;IAJb,mBAAuB,KAAvB;IACA,2BAA+B,KAA/B;IACA,0BAA8B,KAA9B;EAE2D;;EAClEC,QAAQ;IAAUC,OAAO,CAACC,GAAR,CAAY,KAAKC,mBAAjB;EAAuC;;EAEjDC,aAAa;IACnB,KAAKC,WAAL,GAAmB,CAAC,KAAKA,WAAzB;EACD;;EAEaC,UAAU,CAACC,KAAD,EAAc;IAAA;MACpC,MAAMC,MAAM,GAAG,CACb,yDAAyDD,KAAK,EADjD,EAEb;QAAEE,MAAM,EAAE,KAAV;QAAiBC,OAAO,EAAE;UAAE,gBAAgB;QAAlB;MAA1B,CAFa,CAAf;MAIA,MAAMC,OAAO,SAASC,KAAK,CAAC,GAAGJ,MAAJ,CAAL,CACnBK,IADmB,CACdC,QAAQ,IAAG;QAAG,OAAOA,QAAQ,CAACC,IAAT,EAAP;MAAwB,CADxB,EAEnBF,IAFmB,CAEdG,MAAM,IAAIA,MAAM,CAACC,GAAP,CAAYC,IAAD,IAAiB;QAAG,OAAO,IAAIvB,MAAJ,CAAWuB,IAAX,CAAP;MAAyB,CAAxD,CAFI,CAAtB;MAGA,OAAOP,OAAP;IARoC;EASrC;;EAEYQ,MAAM;IAAA;;IAAA;MACjB,KAAI,CAACf,aAAL;;MACA,KAAI,CAACO,OAAL,SAAqB,KAAI,CAACL,UAAL,CAAgB,KAAI,CAACc,SAArB,CAArB;MACA,KAAI,CAACC,kBAAL,GAA0B,KAAI,CAACV,OAAL,CAAaW,MAAb,GAAsB,CAAhD;MACA,IAAI,CAAC,KAAI,CAACnB,mBAAV,EAA+B,KAAI,CAACA,mBAAL,GAA2B,CAAC,KAAI,CAACA,mBAAjC;;MAC/B,KAAI,CAACJ,gBAAL,CAAsBwB,GAAtB,CAA0B,CAAC,KAAI,CAACZ,OAAN,EAAe,KAAI,CAACR,mBAApB,CAA1B;;MACA,KAAI,CAACC,aAAL;IANiB;EAOlB;;EAEMoB,KAAK;IACV,IAAI,KAAKrB,mBAAT,EAA8B;MAC5B,KAAKA,mBAAL,GAA2B,CAAC,KAAKA,mBAAjC;MACA,KAAKJ,gBAAL,CAAsBwB,GAAtB,CAA0B,CAAC,EAAD,EAAK,KAAKpB,mBAAV,CAA1B;IACD;EACF;;AAvCmC;;;mBAAzBN,2BAAyBD;AAAA;;;QAAzBC;EAAyB4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZtCjC;MAAmFA;QAAA,OAAYkC,YAAZ;MAAoB,CAApB;MAC/ElC,+BAAwC,CAAxC,EAAwC,OAAxC,EAAwC,CAAxC;MAC0GA;QAAA;MAAA;MAAtGA;MAEJA,+BAAsB,CAAtB,EAAsB,KAAtB,EAAsB,CAAtB,EAAsB,CAAtB,EAAsB,KAAtB,EAAsB,CAAtB,EAAsB,CAAtB,EAAsB,KAAtB,EAAsB,CAAtB,EAAsB,CAAtB,EAAsB,QAAtB,EAAsB,CAAtB;MAKoBA;MACAA;MACJA;MAEJA,gCAA4B,EAA5B,EAA4B,QAA5B,EAA4B,EAA5B;MACqFA;QAAA,OAASkC,WAAT;MAAgB,CAAhB;MAAkBlC;MAAKA;;;;;;MAZdA;MAAAA;MAM9BA;MAAAA;MAERA;MAAAA;;;;;;;SDE3DC;EAAyBkC,SAAzBlC,yBAAyB;EAAAmC,YAFvB","names":["Artist","i0","ArtistSearchFormComponent","constructor","artistSearchData","ngOnInit","console","log","artistResultsLoaded","toggleSpinner","showSpinner","getArtists","query","config","method","headers","artists","fetch","then","response","json","parsed","map","item","search","searchBar","artistResultsFound","length","set","clear","selectors","decls","vars","consts","template","ctx","factory","providedIn"],"sourceRoot":"","sources":["/Users/miliano/Documents/mmikol.github.io/A8/frontend/artist-search-2.0/src/app/artist-search-form/artist-search-form.component.ts","/Users/miliano/Documents/mmikol.github.io/A8/frontend/artist-search-2.0/src/app/artist-search-form/artist-search-form.component.html"],"sourcesContent":["import { Component, Injectable, OnInit } from '@angular/core';\nimport { Artist } from 'src/models/artist';\nimport { ArtistsSearchDataService } from 'src/shared/artists-search-data.service';\n\n@Component({\n  selector: 'app-artist-search-form',\n  templateUrl: './artist-search-form.component.html',\n  styleUrls: ['./artist-search-form.component.css']\n})\n@Injectable({\n  providedIn:  'root'\n})\nexport class ArtistSearchFormComponent implements OnInit {\n  private artists!: Array<Artist>\n  public searchBar!: string\n  public showSpinner: boolean = false\n  public artistResultsLoaded: boolean = false \n  public artistResultsFound: boolean = false\n  \n  constructor(private artistSearchData: ArtistsSearchDataService) {}  \n  ngOnInit(): void {console.log(this.artistResultsLoaded) }\n\n  private toggleSpinner() {\n    this.showSpinner = !this.showSpinner\n  }\n\n  private async getArtists(query: string) { \n    const config = [\n      `https://artistsearchbackend.wl.r.appspot.com/search?q=${query}`,\n      { method: 'GET', headers: { 'Content-Type': 'application/json' } },  \n    ] as const\n    const artists = await fetch(...config)\n      .then(response => { return response.json() })\n      .then(parsed => parsed.map((item: Artist) => { return new Artist(item) }))\n    return artists\n  }\n\n  public async search()  { \n    this.toggleSpinner()\n    this.artists = await this.getArtists(this.searchBar)\n    this.artistResultsFound = this.artists.length > 0\n    if (!this.artistResultsLoaded) this.artistResultsLoaded = !this.artistResultsLoaded\n    this.artistSearchData.set([this.artists, this.artistResultsLoaded])\n    this.toggleSpinner()\n  }\n\n  public clear() { \n    if (this.artistResultsLoaded) {\n      this.artistResultsLoaded = !this.artistResultsLoaded\n      this.artistSearchData.set([[], this.artistResultsLoaded])\n    }\n  }  \n}","<form class=\"form-group mt-5 mb-3\" #artistSearchForm=\"ngForm\" action=\"/api/search\" (ngSubmit)=\"search()\">\n    <div class=\"row justify-content-center\">\n        <input class=\"form-control input-sm w-75\" placeholder=\"Please enter an artist name.\" name=\"searchBar\" [(ngModel)]=\"searchBar\" required/>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"d-flex justify-content-center\">\n            <div class=\"btn-toolbar\">\n                <div class=\"btn-group me-1\">\n                    <button class=\"btn btn-primary btn-sm active\" type=\"submit\" [disabled]=\"artistSearchForm.form.invalid\">\n                        Search\n                        <span class=\"spinner-border spinner-border-sm\" *ngIf=\"showSpinner\" role=\"status\"></span>\n                    </button>                    \n                </div>\n                <div class=\"btn-group me-1\">\n                    <button class=\"btn btn-secondary btn-sm active\" type=\"button\" aria-hidden=\"true\" (click)=\"clear()\">Clear</button>     \n                </div>\n            </div>    \n        </div>\n    </div>\n</form>\n"]},"metadata":{},"sourceType":"module"}